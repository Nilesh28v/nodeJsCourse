// It will find in the the new collection for any Active/new records
// It will update the status from new to to Inprogress for that document
// It will get the deposit and description from the document and continue with its process untill sending email.
// after email is sent again update the status to Finished/Done

// This whole functionality should be running at every 3 min.. You can do that using setInterval


exports.sample = () => {
    console.log('Hi');
}
const sampleFun = require('./utils/offlineJob').sample();


















// First tell what is the batchSize(300)
// get the count by executing the count query
// divide the count by batchSize to get batchCount and execute query multiple times in loop by skipping values.
// Each query will lokk like -- const findResult = await collection.find({ Description: Description }, { Deposits: Deposits }).limit(batchSize).skip((num*batchSize) -perPage).toArray() -- num starts with 0





for (let num=0; num<batchCount; num++) {
    const findResult = await collection.find({ Description: Description }, { Deposits: Deposits }).limit(batchSize).skip((num*batchSize) -perPage).toArray();
    // convert findResult to csv and append to the csv file
}


//send csv file via email.


//async in npm --- async.eashSeries(),async.each() -- promise.all()








var express = require('express');
var router = express.Router();
const connection = require('../utils/authorization');
const fs = require('fs');
const createCsvWriter = require('csv-writer').createObjectCsvWriter;
const nodemailer = require("nodemailer");
const { parse } = require('json2csv');
var smtpTransport = require('nodemailer-smtp-transport');
var express = require('express');
var router = express.Router();
const conn = require('../mongoConn');


/* GET home page. */
router.get('/', function (req, res, next) {
  res.render('index', { title: 'Express' });
});

router.post('/checkLogin', function (req, res, next) {
  const { bid, password } = req.body;
  console.log(bid, password);
  conn.connFun().then(async (db) => {
    console.log('start');
    console.log('Connected successfully to server');
    const collection = db.collection('signUp');
    const findResult = await collection.find({ bid: bid }).toArray();
    if (findResult[0].password == password) {
      console.log('sucess!');
      res.render('welcome')
    } else {
      console.log('failed!');
      res.render('index')
    }

  }).catch((e) => {
    console.error(e);
})
})


router.post('/checkWelcome', function (req, res, next) {
  const { Description, Deposits } = req.body;
  console.log(Description, Deposits);
  conn.connFun().then(async (db) => {
    console.log('start');
    const collection = db.collection('transDetails');
    const datesObj = new Date();
    const b = datesObj.toISOString();
    console.log('start');
    // get count
    //divide count with your batch size
    //found querys (prepare querys) with limit and skip
    const count= db.transDetails.count();
    console.log(count,'this is the count');
    const batchsize=500;




    for (let num=0; num<batchCount; num++) {
      const findResult = await collection.find({ Description: Description }, { Deposits: Deposits }).limit(batchSize).skip((num*batchSize) -perPage).toArray();
      fs.appendFile('result.csv', csv, function (err) {
        if (err) throw err;
        console.log('The "data to append" was appended to file!');
      });
     
  }
  
     // if (findResult.length ===0) {
      //   res.send('no records found!')
      //   console.log(result, "result")
      // }

      // else {
        const csv = parse(result, ["_id", "Date", "Description", "Deposits", "Withdrawls", "Balance"]);
        //fs.writeFileSync('result.csv', csv)
        // console.log(csv,"csv")
        var transporter = nodemailer.createTransport({
          service: "hotmail",
          port: 587,
          auth: {
            user: "nilesh28vishwakarma@gmail.com",
            pass: "Nilesh@2876868",
          },
        });

        transporter.sendMail(
          {
            from: "nilesh28vishwakarma@gmail.com",
            to: "nilesh28vishwakarma@gmail.com",
            subject: "**IMPORTANT**RECORD**",
            text: "Please check the attachment for your reference! ",
            html: "<b>You asked for some Bank Details, There is a file containing all Details </b>",
            
            attachments: [
              {
                filename: "result.csv",
                content: csv,

              },
            ],
          },
          (err, info) => {
            if (err) {
              console.log("Error occurred. " + err.message);
              return process.exit(1);
            }
            console.log("Message sent to you Email: %s", info.messageId);
            // console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
            //res.send("Message sent: %s", info.messageId);
          }
        );
        res.send("<h2>Message sent to your Email:</h2>");


      //}


    })
  }).catch((error) => {
    console.log(error);
  })


module.exports = router;